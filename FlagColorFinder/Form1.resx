<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmZmZAJmZmV6ZmZmkmZmZApmZmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZkAmZmZXpmZmaSZmZkCmZmZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmQCZmZlemZmZpJmZmQKZmZkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZmZAJmZmV6ZmZmkmZmZApmZ
        mQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZkAmZmZXpmZ
        maSZmZkCmZmZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZ
        mQCZmZlemZmZpJmZmQKZmZkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAmZmZAJmZmV6ZmZmkmZmZApmZmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACZmZkAmZmZXpmZmaSZmZkCmZmZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmQCZmZlemZmZpJmZmQKZmZkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZmZAJmZmV6ZmZmkmZmZApmZmQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZkAmZmZXpmZmaSZmZkCmZmZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmQCZmZlemZmZpJmZ
        mQKZmZkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZmZAJmZ
        mV6ZmZmkmZmZApmZmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACZmZkAmZmZXpmZmaSZmZkCmZmZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABsb4gAbG+IAGxviEBsb4hAbG+IAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJmZmQCZmZlemZmZpENDywUbG+IgGxviRhsb4lsbG+JeGxviUhsb4jsbG+IiGxviDBsb
        4gEbG+IAAAAAAAAAAAAbG+IAGxviABsb4gMbG+ITGxviOxsb4nsbG+LEGxviVhsb4gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmZmZAJubmFyJiaK8HBzhkBsb4t8bG+L4Gxvi/hsb4v8bG+L8Gxvi8xsb
        4uMbG+LEGxvimxsb4ncbG+JjGxviYBsb4msbG+KEGxviqBsb4tAbG+LyGxvi/xsb4v4bG+JdGxviAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZkAn5+VWW5usvocHOL+Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/hsb
        4l0bG+IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmQCfn5VZbW2z/hwc4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L+GxviXRsb4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZmZAJ+flVltbbP+HBzi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v4bG+JdGxviAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZkAn5+VWW1t
        s/4cHOL/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/hsb4l0bG+IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZ
        mQCfn5VZbW2z/hwc4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L+GxviXRsb4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAmZmZAJ+flVltbbP+HBzi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v4bG+JdGxviAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACZmZkAn5+VWW1ts/4cHOL/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/hsb4l0bG+IAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmQCfn5VZbW2z/hwc4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L+GxviXRsb
        4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZmZAJ+flVltbbP+HBzi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v4bG+JdGxviAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZkAn5+VWW1ts/4cHOL/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/hsb4l0bG+IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmQCfn5VZbW2z/hwc
        4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4v8bG+L+GxviXRsb4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZmZAJ+f
        lVltbbP+HBzi8Bsb4rwbG+KHGxviahsb4mYbG+J7Gxvioxsb4s0bG+LrGxvi+xsb4v8bG+L/Gxvi/xsb
        4v8bG+L/Gxvi/xsb4vwbG+LrGxvixRsb4oYbG+IhGxviAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZm
        ZgCXl5cAk5OPYXl5otUfH99EGBjlChsb4wAbG+IAGxviABsb4gAbG+ICGxviERsb4i0bG+JPGxvicRsb
        4osbG+KZGxvimhsb4o8bG+J4GxviVRsb4i4bG+IOGxviABsb4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZmZmAGVlZSFpaWnGa2tq6mlpYlBmZmgAcnJSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABmZmYAZmZmUWZmZvtmZmb/ZmZmnGZmZgBmZmYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZmZgBmZmYjZmZmzWZmZu9mZmZYZmZmAGZmZgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+P////j////4////+P////j////4////+P////j////4////+P////j/
        ///4////+P////j//8/4AHwP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gA
        AA/4AAAP+AAAD/h4AD/w////8P////D///8=
</value>
  </data>
</root>